version: "3.8"
volumes:
  postgres_data:
  minio-data:

services:

  postgres:
    container_name: postgres
    image: postgres:16.3
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres-password
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    networks:
      - boost-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server ~/minio --console-address :9090
    ports:
      - "9090:9090"
      - "9000:9000"
    volumes:
      - minio-data:/minio
    networks:
      - boost-network

  eureka-server:
    container_name: eureka-server
    build:
      context: ./
      dockerfile: eureka-server/Dockerfile
    image: eureka-server
    restart: always
    ports:
      - "8009:8009"
    environment:
      - EUREKA_URL=http://eureka-server:8009/eureka
    networks:
      - boost-network

  core-microservice:
    container_name: core-microservice
    build:
      context: ./
      dockerfile: core-microservice/Dockerfile
    image: core-microservice
    ports:
      - "8003:8003"
    networks:
      - boost-network
    environment:
      - JAVA_OPTS=-Xmx512M
      - DATABASE_URL=jdbc:postgresql://postgres:5432/postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres-password
      - EUREKA_URL=http://eureka-server:8009/eureka
      - MINIO_URL=http://minio:9000
      - MINIO_BUCKET_PROFILE=profile-images
      - MINIO_BUCKET_POST=post-images
      - MINIO_BUCKET_MESSAGE=message-images
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - postgres
      - eureka-server
      - minio

  auth-microservice:
    container_name: auth-microservice
    build:
      context: ./
      dockerfile: auth-microservice/Dockerfile
    image: auth-microservice
    ports:
      - "8002:8002"
    networks:
      - boost-network
    environment:
      - JAVA_OPTS=-Xmx512M
      - JWT_SECRET=ii3z338yc4LMBBUo1xBfA4VBzfHm3DNBUHQouH5L/YZ9CtrTeXx07zO0yzEHLXT7ahGyzy7++ZiKr2X2F8SYg7wbo9vkL7U+7ovhqOF9YanUzgYwtVKcYvze4m1bASubJIr+h3Icnw0W8uuRIO/iV1Q6+BGN9i3FrRlO/yCLdPg=
      - USER_SERVICE_LINK=http://core:8003/api/v1/core/crud/user
      - EUREKA_URL=http://eureka-server:8009/eureka
    depends_on:
      - core-microservice
      - eureka-server

  api-gateway:
    container_name: api-gateway
    build:
      context: ./
      dockerfile: api-gateway/Dockerfile
    image: api-gateway
    ports:
      - "8001:8001"
    networks:
      - boost-network
    environment:
      - EUREKA_URL=http://eureka-server:8009/eureka
      - JAVA_OPTS=-Xmx512M
      - JWT_SECRET=ii3z338yc4LMBBUo1xBfA4VBzfHm3DNBUHQouH5L/YZ9CtrTeXx07zO0yzEHLXT7ahGyzy7++ZiKr2X2F8SYg7wbo9vkL7U+7ovhqOF9YanUzgYwtVKcYvze4m1bASubJIr+h3Icnw0W8uuRIO/iV1Q6+BGN9i3FrRlO/yCLdPg=
    depends_on:
      - eureka-server
      - core-microservice
      - auth-microservice


networks:
  boost-network:
    driver: bridge